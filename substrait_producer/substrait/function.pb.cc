// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/function.proto

#include "substrait/function.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace substrait {
PROTOBUF_CONSTEXPR FunctionSignature_FinalArgVariadic::FunctionSignature_FinalArgVariadic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.min_args_)*/int64_t{0}
  , /*decltype(_impl_.max_args_)*/int64_t{0}
  , /*decltype(_impl_.consistency_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSignature_FinalArgVariadicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_FinalArgVariadicDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_FinalArgVariadicDefaultTypeInternal() {}
  union {
    FunctionSignature_FinalArgVariadic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_FinalArgVariadicDefaultTypeInternal _FunctionSignature_FinalArgVariadic_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_FinalArgNormal::FunctionSignature_FinalArgNormal(
    ::_pbi::ConstantInitialized) {}
struct FunctionSignature_FinalArgNormalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_FinalArgNormalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_FinalArgNormalDefaultTypeInternal() {}
  union {
    FunctionSignature_FinalArgNormal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_FinalArgNormalDefaultTypeInternal _FunctionSignature_FinalArgNormal_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Scalar::FunctionSignature_Scalar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arguments_)*/{}
  , /*decltype(_impl_.name_)*/{}
  , /*decltype(_impl_.implementations_)*/{}
  , /*decltype(_impl_.description_)*/nullptr
  , /*decltype(_impl_.output_type_)*/nullptr
  , /*decltype(_impl_.deterministic_)*/false
  , /*decltype(_impl_.session_dependent_)*/false
  , /*decltype(_impl_.final_variable_behavior_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FunctionSignature_ScalarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_ScalarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_ScalarDefaultTypeInternal() {}
  union {
    FunctionSignature_Scalar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_ScalarDefaultTypeInternal _FunctionSignature_Scalar_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Aggregate::FunctionSignature_Aggregate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arguments_)*/{}
  , /*decltype(_impl_.implementations_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/nullptr
  , /*decltype(_impl_.output_type_)*/nullptr
  , /*decltype(_impl_.intermediate_type_)*/nullptr
  , /*decltype(_impl_.max_set_)*/uint64_t{0u}
  , /*decltype(_impl_.deterministic_)*/false
  , /*decltype(_impl_.session_dependent_)*/false
  , /*decltype(_impl_.ordered_)*/false
  , /*decltype(_impl_.final_variable_behavior_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FunctionSignature_AggregateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_AggregateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_AggregateDefaultTypeInternal() {}
  union {
    FunctionSignature_Aggregate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_AggregateDefaultTypeInternal _FunctionSignature_Aggregate_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Window::FunctionSignature_Window(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arguments_)*/{}
  , /*decltype(_impl_.name_)*/{}
  , /*decltype(_impl_.implementations_)*/{}
  , /*decltype(_impl_.description_)*/nullptr
  , /*decltype(_impl_.intermediate_type_)*/nullptr
  , /*decltype(_impl_.output_type_)*/nullptr
  , /*decltype(_impl_.deterministic_)*/false
  , /*decltype(_impl_.session_dependent_)*/false
  , /*decltype(_impl_.ordered_)*/false
  , /*decltype(_impl_.window_type_)*/0
  , /*decltype(_impl_.max_set_)*/uint64_t{0u}
  , /*decltype(_impl_.final_variable_behavior_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FunctionSignature_WindowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_WindowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_WindowDefaultTypeInternal() {}
  union {
    FunctionSignature_Window _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_WindowDefaultTypeInternal _FunctionSignature_Window_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Description::FunctionSignature_Description(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.language_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.body_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSignature_DescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_DescriptionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_DescriptionDefaultTypeInternal() {}
  union {
    FunctionSignature_Description _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_DescriptionDefaultTypeInternal _FunctionSignature_Description_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Implementation::FunctionSignature_Implementation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSignature_ImplementationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_ImplementationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_ImplementationDefaultTypeInternal() {}
  union {
    FunctionSignature_Implementation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_ImplementationDefaultTypeInternal _FunctionSignature_Implementation_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Argument_ValueArgument::FunctionSignature_Argument_ValueArgument(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/nullptr
  , /*decltype(_impl_.constant_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSignature_Argument_ValueArgumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_Argument_ValueArgumentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_Argument_ValueArgumentDefaultTypeInternal() {}
  union {
    FunctionSignature_Argument_ValueArgument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_Argument_ValueArgumentDefaultTypeInternal _FunctionSignature_Argument_ValueArgument_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Argument_TypeArgument::FunctionSignature_Argument_TypeArgument(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSignature_Argument_TypeArgumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_Argument_TypeArgumentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_Argument_TypeArgumentDefaultTypeInternal() {}
  union {
    FunctionSignature_Argument_TypeArgument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_Argument_TypeArgumentDefaultTypeInternal _FunctionSignature_Argument_TypeArgument_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Argument_EnumArgument::FunctionSignature_Argument_EnumArgument(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.options_)*/{}
  , /*decltype(_impl_.optional_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSignature_Argument_EnumArgumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_Argument_EnumArgumentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_Argument_EnumArgumentDefaultTypeInternal() {}
  union {
    FunctionSignature_Argument_EnumArgument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_Argument_EnumArgumentDefaultTypeInternal _FunctionSignature_Argument_EnumArgument_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature_Argument::FunctionSignature_Argument(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.argument_kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FunctionSignature_ArgumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignature_ArgumentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignature_ArgumentDefaultTypeInternal() {}
  union {
    FunctionSignature_Argument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignature_ArgumentDefaultTypeInternal _FunctionSignature_Argument_default_instance_;
PROTOBUF_CONSTEXPR FunctionSignature::FunctionSignature(
    ::_pbi::ConstantInitialized) {}
struct FunctionSignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSignatureDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSignatureDefaultTypeInternal() {}
  union {
    FunctionSignature _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSignatureDefaultTypeInternal _FunctionSignature_default_instance_;
}  // namespace substrait
static ::_pb::Metadata file_level_metadata_substrait_2ffunction_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_substrait_2ffunction_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_substrait_2ffunction_2eproto = nullptr;

const uint32_t TableStruct_substrait_2ffunction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_FinalArgVariadic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_FinalArgVariadic, _impl_.min_args_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_FinalArgVariadic, _impl_.max_args_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_FinalArgVariadic, _impl_.consistency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_FinalArgNormal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.arguments_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.deterministic_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.session_dependent_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.output_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.implementations_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Scalar, _impl_.final_variable_behavior_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.arguments_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.deterministic_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.session_dependent_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.output_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.ordered_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.max_set_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.intermediate_type_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.implementations_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Aggregate, _impl_.final_variable_behavior_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.arguments_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.deterministic_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.session_dependent_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.intermediate_type_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.output_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.ordered_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.max_set_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.window_type_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.implementations_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Window, _impl_.final_variable_behavior_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Description, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Description, _impl_.language_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Description, _impl_.body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Implementation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Implementation, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Implementation, _impl_.uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_ValueArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_ValueArgument, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_ValueArgument, _impl_.constant_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_TypeArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_TypeArgument, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_EnumArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_EnumArgument, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument_EnumArgument, _impl_.optional_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument, _impl_.name_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature_Argument, _impl_.argument_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::substrait::FunctionSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::substrait::FunctionSignature_FinalArgVariadic)},
  { 9, -1, -1, sizeof(::substrait::FunctionSignature_FinalArgNormal)},
  { 15, -1, -1, sizeof(::substrait::FunctionSignature_Scalar)},
  { 31, -1, -1, sizeof(::substrait::FunctionSignature_Aggregate)},
  { 50, -1, -1, sizeof(::substrait::FunctionSignature_Window)},
  { 70, -1, -1, sizeof(::substrait::FunctionSignature_Description)},
  { 78, -1, -1, sizeof(::substrait::FunctionSignature_Implementation)},
  { 86, -1, -1, sizeof(::substrait::FunctionSignature_Argument_ValueArgument)},
  { 94, -1, -1, sizeof(::substrait::FunctionSignature_Argument_TypeArgument)},
  { 101, -1, -1, sizeof(::substrait::FunctionSignature_Argument_EnumArgument)},
  { 109, -1, -1, sizeof(::substrait::FunctionSignature_Argument)},
  { 120, -1, -1, sizeof(::substrait::FunctionSignature)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::substrait::_FunctionSignature_FinalArgVariadic_default_instance_._instance,
  &::substrait::_FunctionSignature_FinalArgNormal_default_instance_._instance,
  &::substrait::_FunctionSignature_Scalar_default_instance_._instance,
  &::substrait::_FunctionSignature_Aggregate_default_instance_._instance,
  &::substrait::_FunctionSignature_Window_default_instance_._instance,
  &::substrait::_FunctionSignature_Description_default_instance_._instance,
  &::substrait::_FunctionSignature_Implementation_default_instance_._instance,
  &::substrait::_FunctionSignature_Argument_ValueArgument_default_instance_._instance,
  &::substrait::_FunctionSignature_Argument_TypeArgument_default_instance_._instance,
  &::substrait::_FunctionSignature_Argument_EnumArgument_default_instance_._instance,
  &::substrait::_FunctionSignature_Argument_default_instance_._instance,
  &::substrait::_FunctionSignature_default_instance_._instance,
};

const char descriptor_table_protodef_substrait_2ffunction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030substrait/function.proto\022\tsubstrait\032#s"
  "ubstrait/parameterized_types.proto\032\024subs"
  "trait/type.proto\032 substrait/type_express"
  "ions.proto\"\301\025\n\021FunctionSignature\032\235\002\n\020Fin"
  "alArgVariadic\022\020\n\010min_args\030\001 \001(\003\022\020\n\010max_a"
  "rgs\030\002 \001(\003\022W\n\013consistency\030\003 \001(\0162B.substra"
  "it.FunctionSignature.FinalArgVariadic.Pa"
  "rameterConsistency\"\213\001\n\024ParameterConsiste"
  "ncy\022%\n!PARAMETER_CONSISTENCY_UNSPECIFIED"
  "\020\000\022$\n PARAMETER_CONSISTENCY_CONSISTENT\020\001"
  "\022&\n\"PARAMETER_CONSISTENCY_INCONSISTENT\020\002"
  "\032\020\n\016FinalArgNormal\032\332\003\n\006Scalar\0228\n\targumen"
  "ts\030\002 \003(\0132%.substrait.FunctionSignature.A"
  "rgument\022\014\n\004name\030\003 \003(\t\022=\n\013description\030\004 \001"
  "(\0132(.substrait.FunctionSignature.Descrip"
  "tion\022\025\n\rdeterministic\030\007 \001(\010\022\031\n\021session_d"
  "ependent\030\010 \001(\010\0224\n\013output_type\030\t \001(\0132\037.su"
  "bstrait.DerivationExpression\022A\n\010variadic"
  "\030\n \001(\0132-.substrait.FunctionSignature.Fin"
  "alArgVariadicH\000\022=\n\006normal\030\013 \001(\0132+.substr"
  "ait.FunctionSignature.FinalArgNormalH\000\022D"
  "\n\017implementations\030\014 \003(\0132+.substrait.Func"
  "tionSignature.ImplementationB\031\n\027final_va"
  "riable_behavior\032\253\004\n\tAggregate\0228\n\targumen"
  "ts\030\002 \003(\0132%.substrait.FunctionSignature.A"
  "rgument\022\014\n\004name\030\003 \001(\t\022=\n\013description\030\004 \001"
  "(\0132(.substrait.FunctionSignature.Descrip"
  "tion\022\025\n\rdeterministic\030\007 \001(\010\022\031\n\021session_d"
  "ependent\030\010 \001(\010\0224\n\013output_type\030\t \001(\0132\037.su"
  "bstrait.DerivationExpression\022A\n\010variadic"
  "\030\n \001(\0132-.substrait.FunctionSignature.Fin"
  "alArgVariadicH\000\022=\n\006normal\030\013 \001(\0132+.substr"
  "ait.FunctionSignature.FinalArgNormalH\000\022\017"
  "\n\007ordered\030\016 \001(\010\022\017\n\007max_set\030\014 \001(\004\022*\n\021inte"
  "rmediate_type\030\r \001(\0132\017.substrait.Type\022D\n\017"
  "implementations\030\017 \003(\0132+.substrait.Functi"
  "onSignature.ImplementationB\031\n\027final_vari"
  "able_behavior\032\336\005\n\006Window\0228\n\targuments\030\002 "
  "\003(\0132%.substrait.FunctionSignature.Argume"
  "nt\022\014\n\004name\030\003 \003(\t\022=\n\013description\030\004 \001(\0132(."
  "substrait.FunctionSignature.Description\022"
  "\025\n\rdeterministic\030\007 \001(\010\022\031\n\021session_depend"
  "ent\030\010 \001(\010\022:\n\021intermediate_type\030\t \001(\0132\037.s"
  "ubstrait.DerivationExpression\0224\n\013output_"
  "type\030\n \001(\0132\037.substrait.DerivationExpress"
  "ion\022A\n\010variadic\030\020 \001(\0132-.substrait.Functi"
  "onSignature.FinalArgVariadicH\000\022=\n\006normal"
  "\030\021 \001(\0132+.substrait.FunctionSignature.Fin"
  "alArgNormalH\000\022\017\n\007ordered\030\013 \001(\010\022\017\n\007max_se"
  "t\030\014 \001(\004\022C\n\013window_type\030\016 \001(\0162..substrait"
  ".FunctionSignature.Window.WindowType\022D\n\017"
  "implementations\030\017 \003(\0132+.substrait.Functi"
  "onSignature.Implementation\"_\n\nWindowType"
  "\022\033\n\027WINDOW_TYPE_UNSPECIFIED\020\000\022\031\n\025WINDOW_"
  "TYPE_STREAMING\020\001\022\031\n\025WINDOW_TYPE_PARTITIO"
  "N\020\002B\031\n\027final_variable_behavior\032-\n\013Descri"
  "ption\022\020\n\010language\030\001 \001(\t\022\014\n\004body\030\002 \001(\t\032\246\001"
  "\n\016Implementation\022>\n\004type\030\001 \001(\01620.substra"
  "it.FunctionSignature.Implementation.Type"
  "\022\013\n\003uri\030\002 \001(\t\"G\n\004Type\022\024\n\020TYPE_UNSPECIFIE"
  "D\020\000\022\025\n\021TYPE_WEB_ASSEMBLY\020\001\022\022\n\016TYPE_TRINO"
  "_JAR\020\002\032\265\003\n\010Argument\022\014\n\004name\030\001 \001(\t\022D\n\005val"
  "ue\030\002 \001(\01323.substrait.FunctionSignature.A"
  "rgument.ValueArgumentH\000\022B\n\004type\030\003 \001(\01322."
  "substrait.FunctionSignature.Argument.Typ"
  "eArgumentH\000\022B\n\004enum\030\004 \001(\01322.substrait.Fu"
  "nctionSignature.Argument.EnumArgumentH\000\032"
  "M\n\rValueArgument\022*\n\004type\030\001 \001(\0132\034.substra"
  "it.ParameterizedType\022\020\n\010constant\030\002 \001(\010\032:"
  "\n\014TypeArgument\022*\n\004type\030\001 \001(\0132\034.substrait"
  ".ParameterizedType\0321\n\014EnumArgument\022\017\n\007op"
  "tions\030\001 \003(\t\022\020\n\010optional\030\002 \001(\010B\017\n\rargumen"
  "t_kindBW\n\022io.substrait.protoP\001Z*github.c"
  "om/substrait-io/substrait-go/proto\252\002\022Sub"
  "strait.Protobufb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_substrait_2ffunction_2eproto_deps[3] = {
  &::descriptor_table_substrait_2fparameterized_5ftypes_2eproto,
  &::descriptor_table_substrait_2ftype_2eproto,
  &::descriptor_table_substrait_2ftype_5fexpressions_2eproto,
};
static ::_pbi::once_flag descriptor_table_substrait_2ffunction_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_substrait_2ffunction_2eproto = {
    false, false, 2983, descriptor_table_protodef_substrait_2ffunction_2eproto,
    "substrait/function.proto",
    &descriptor_table_substrait_2ffunction_2eproto_once, descriptor_table_substrait_2ffunction_2eproto_deps, 3, 12,
    schemas, file_default_instances, TableStruct_substrait_2ffunction_2eproto::offsets,
    file_level_metadata_substrait_2ffunction_2eproto, file_level_enum_descriptors_substrait_2ffunction_2eproto,
    file_level_service_descriptors_substrait_2ffunction_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_substrait_2ffunction_2eproto_getter() {
  return &descriptor_table_substrait_2ffunction_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_substrait_2ffunction_2eproto(&descriptor_table_substrait_2ffunction_2eproto);
namespace substrait {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_substrait_2ffunction_2eproto);
  return file_level_enum_descriptors_substrait_2ffunction_2eproto[0];
}
bool FunctionSignature_FinalArgVariadic_ParameterConsistency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::PARAMETER_CONSISTENCY_UNSPECIFIED;
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::PARAMETER_CONSISTENCY_CONSISTENT;
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::PARAMETER_CONSISTENCY_INCONSISTENT;
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::ParameterConsistency_MIN;
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::ParameterConsistency_MAX;
constexpr int FunctionSignature_FinalArgVariadic::ParameterConsistency_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FunctionSignature_Window_WindowType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_substrait_2ffunction_2eproto);
  return file_level_enum_descriptors_substrait_2ffunction_2eproto[1];
}
bool FunctionSignature_Window_WindowType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window::WINDOW_TYPE_UNSPECIFIED;
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window::WINDOW_TYPE_STREAMING;
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window::WINDOW_TYPE_PARTITION;
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window::WindowType_MIN;
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window::WindowType_MAX;
constexpr int FunctionSignature_Window::WindowType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FunctionSignature_Implementation_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_substrait_2ffunction_2eproto);
  return file_level_enum_descriptors_substrait_2ffunction_2eproto[2];
}
bool FunctionSignature_Implementation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation::TYPE_UNSPECIFIED;
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation::TYPE_WEB_ASSEMBLY;
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation::TYPE_TRINO_JAR;
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation::Type_MIN;
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation::Type_MAX;
constexpr int FunctionSignature_Implementation::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class FunctionSignature_FinalArgVariadic::_Internal {
 public:
};

FunctionSignature_FinalArgVariadic::FunctionSignature_FinalArgVariadic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.FinalArgVariadic)
}
FunctionSignature_FinalArgVariadic::FunctionSignature_FinalArgVariadic(const FunctionSignature_FinalArgVariadic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_FinalArgVariadic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.min_args_){}
    , decltype(_impl_.max_args_){}
    , decltype(_impl_.consistency_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.min_args_, &from._impl_.min_args_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.consistency_) -
    reinterpret_cast<char*>(&_impl_.min_args_)) + sizeof(_impl_.consistency_));
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.FinalArgVariadic)
}

inline void FunctionSignature_FinalArgVariadic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.min_args_){int64_t{0}}
    , decltype(_impl_.max_args_){int64_t{0}}
    , decltype(_impl_.consistency_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FunctionSignature_FinalArgVariadic::~FunctionSignature_FinalArgVariadic() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.FinalArgVariadic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_FinalArgVariadic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FunctionSignature_FinalArgVariadic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_FinalArgVariadic::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.FinalArgVariadic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.min_args_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.consistency_) -
      reinterpret_cast<char*>(&_impl_.min_args_)) + sizeof(_impl_.consistency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_FinalArgVariadic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 min_args = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.min_args_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 max_args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.max_args_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_consistency(static_cast<::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_FinalArgVariadic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.FinalArgVariadic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 min_args = 1;
  if (this->_internal_min_args() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_min_args(), target);
  }

  // int64 max_args = 2;
  if (this->_internal_max_args() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_max_args(), target);
  }

  // .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3;
  if (this->_internal_consistency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_consistency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.FinalArgVariadic)
  return target;
}

size_t FunctionSignature_FinalArgVariadic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.FinalArgVariadic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 min_args = 1;
  if (this->_internal_min_args() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_min_args());
  }

  // int64 max_args = 2;
  if (this->_internal_max_args() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_max_args());
  }

  // .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3;
  if (this->_internal_consistency() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_consistency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_FinalArgVariadic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_FinalArgVariadic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_FinalArgVariadic::GetClassData() const { return &_class_data_; }


void FunctionSignature_FinalArgVariadic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_FinalArgVariadic*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_FinalArgVariadic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.FinalArgVariadic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_min_args() != 0) {
    _this->_internal_set_min_args(from._internal_min_args());
  }
  if (from._internal_max_args() != 0) {
    _this->_internal_set_max_args(from._internal_max_args());
  }
  if (from._internal_consistency() != 0) {
    _this->_internal_set_consistency(from._internal_consistency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_FinalArgVariadic::CopyFrom(const FunctionSignature_FinalArgVariadic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.FinalArgVariadic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_FinalArgVariadic::IsInitialized() const {
  return true;
}

void FunctionSignature_FinalArgVariadic::InternalSwap(FunctionSignature_FinalArgVariadic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionSignature_FinalArgVariadic, _impl_.consistency_)
      + sizeof(FunctionSignature_FinalArgVariadic::_impl_.consistency_)
      - PROTOBUF_FIELD_OFFSET(FunctionSignature_FinalArgVariadic, _impl_.min_args_)>(
          reinterpret_cast<char*>(&_impl_.min_args_),
          reinterpret_cast<char*>(&other->_impl_.min_args_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_FinalArgVariadic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[0]);
}

// ===================================================================

class FunctionSignature_FinalArgNormal::_Internal {
 public:
};

FunctionSignature_FinalArgNormal::FunctionSignature_FinalArgNormal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.FinalArgNormal)
}
FunctionSignature_FinalArgNormal::FunctionSignature_FinalArgNormal(const FunctionSignature_FinalArgNormal& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  FunctionSignature_FinalArgNormal* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.FinalArgNormal)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_FinalArgNormal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_FinalArgNormal::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_FinalArgNormal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[1]);
}

// ===================================================================

class FunctionSignature_Scalar::_Internal {
 public:
  static const ::substrait::FunctionSignature_Description& description(const FunctionSignature_Scalar* msg);
  static const ::substrait::DerivationExpression& output_type(const FunctionSignature_Scalar* msg);
  static const ::substrait::FunctionSignature_FinalArgVariadic& variadic(const FunctionSignature_Scalar* msg);
  static const ::substrait::FunctionSignature_FinalArgNormal& normal(const FunctionSignature_Scalar* msg);
};

const ::substrait::FunctionSignature_Description&
FunctionSignature_Scalar::_Internal::description(const FunctionSignature_Scalar* msg) {
  return *msg->_impl_.description_;
}
const ::substrait::DerivationExpression&
FunctionSignature_Scalar::_Internal::output_type(const FunctionSignature_Scalar* msg) {
  return *msg->_impl_.output_type_;
}
const ::substrait::FunctionSignature_FinalArgVariadic&
FunctionSignature_Scalar::_Internal::variadic(const FunctionSignature_Scalar* msg) {
  return *msg->_impl_.final_variable_behavior_.variadic_;
}
const ::substrait::FunctionSignature_FinalArgNormal&
FunctionSignature_Scalar::_Internal::normal(const FunctionSignature_Scalar* msg) {
  return *msg->_impl_.final_variable_behavior_.normal_;
}
void FunctionSignature_Scalar::clear_output_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.output_type_ != nullptr) {
    delete _impl_.output_type_;
  }
  _impl_.output_type_ = nullptr;
}
void FunctionSignature_Scalar::set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* variadic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_final_variable_behavior();
  if (variadic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(variadic);
    if (message_arena != submessage_arena) {
      variadic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variadic, submessage_arena);
    }
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = variadic;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Scalar.variadic)
}
void FunctionSignature_Scalar::set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* normal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_final_variable_behavior();
  if (normal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(normal);
    if (message_arena != submessage_arena) {
      normal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = normal;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Scalar.normal)
}
FunctionSignature_Scalar::FunctionSignature_Scalar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Scalar)
}
FunctionSignature_Scalar::FunctionSignature_Scalar(const FunctionSignature_Scalar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Scalar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){from._impl_.arguments_}
    , decltype(_impl_.name_){from._impl_.name_}
    , decltype(_impl_.implementations_){from._impl_.implementations_}
    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.output_type_){nullptr}
    , decltype(_impl_.deterministic_){}
    , decltype(_impl_.session_dependent_){}
    , decltype(_impl_.final_variable_behavior_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_description()) {
    _this->_impl_.description_ = new ::substrait::FunctionSignature_Description(*from._impl_.description_);
  }
  if (from._internal_has_output_type()) {
    _this->_impl_.output_type_ = new ::substrait::DerivationExpression(*from._impl_.output_type_);
  }
  ::memcpy(&_impl_.deterministic_, &from._impl_.deterministic_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.session_dependent_) -
    reinterpret_cast<char*>(&_impl_.deterministic_)) + sizeof(_impl_.session_dependent_));
  clear_has_final_variable_behavior();
  switch (from.final_variable_behavior_case()) {
    case kVariadic: {
      _this->_internal_mutable_variadic()->::substrait::FunctionSignature_FinalArgVariadic::MergeFrom(
          from._internal_variadic());
      break;
    }
    case kNormal: {
      _this->_internal_mutable_normal()->::substrait::FunctionSignature_FinalArgNormal::MergeFrom(
          from._internal_normal());
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Scalar)
}

inline void FunctionSignature_Scalar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){arena}
    , decltype(_impl_.name_){arena}
    , decltype(_impl_.implementations_){arena}
    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.output_type_){nullptr}
    , decltype(_impl_.deterministic_){false}
    , decltype(_impl_.session_dependent_){false}
    , decltype(_impl_.final_variable_behavior_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_final_variable_behavior();
}

FunctionSignature_Scalar::~FunctionSignature_Scalar() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Scalar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Scalar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arguments_.~RepeatedPtrField();
  _impl_.name_.~RepeatedPtrField();
  _impl_.implementations_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.description_;
  if (this != internal_default_instance()) delete _impl_.output_type_;
  if (has_final_variable_behavior()) {
    clear_final_variable_behavior();
  }
}

void FunctionSignature_Scalar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Scalar::clear_final_variable_behavior() {
// @@protoc_insertion_point(one_of_clear_start:substrait.FunctionSignature.Scalar)
  switch (final_variable_behavior_case()) {
    case kVariadic: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.final_variable_behavior_.variadic_;
      }
      break;
    }
    case kNormal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.final_variable_behavior_.normal_;
      }
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}


void FunctionSignature_Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Scalar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  _impl_.name_.Clear();
  _impl_.implementations_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.description_ != nullptr) {
    delete _impl_.description_;
  }
  _impl_.description_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.output_type_ != nullptr) {
    delete _impl_.output_type_;
  }
  _impl_.output_type_ = nullptr;
  ::memset(&_impl_.deterministic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.session_dependent_) -
      reinterpret_cast<char*>(&_impl_.deterministic_)) + sizeof(_impl_.session_dependent_));
  clear_final_variable_behavior();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Scalar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .substrait.FunctionSignature.Argument arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arguments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Scalar.name"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Description description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_description(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool deterministic = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.deterministic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool session_dependent = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.session_dependent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.DerivationExpression output_type = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_variadic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgNormal normal = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_normal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .substrait.FunctionSignature.Implementation implementations = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_implementations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Scalar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Scalar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arguments_size()); i < n; i++) {
    const auto& repfield = this->_internal_arguments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string name = 3;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Scalar.name");
    target = stream->WriteString(3, s, target);
  }

  // .substrait.FunctionSignature.Description description = 4;
  if (this->_internal_has_description()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::description(this),
        _Internal::description(this).GetCachedSize(), target, stream);
  }

  // bool deterministic = 7;
  if (this->_internal_deterministic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_deterministic(), target);
  }

  // bool session_dependent = 8;
  if (this->_internal_session_dependent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_session_dependent(), target);
  }

  // .substrait.DerivationExpression output_type = 9;
  if (this->_internal_has_output_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::output_type(this),
        _Internal::output_type(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
  if (_internal_has_variadic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::variadic(this),
        _Internal::variadic(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.FinalArgNormal normal = 11;
  if (_internal_has_normal()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::normal(this),
        _Internal::normal(this).GetCachedSize(), target, stream);
  }

  // repeated .substrait.FunctionSignature.Implementation implementations = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_implementations_size()); i < n; i++) {
    const auto& repfield = this->_internal_implementations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Scalar)
  return target;
}

size_t FunctionSignature_Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Scalar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  total_size += 1UL * this->_internal_arguments_size();
  for (const auto& msg : this->_impl_.arguments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string name = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.name_.size());
  for (int i = 0, n = _impl_.name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.name_.Get(i));
  }

  // repeated .substrait.FunctionSignature.Implementation implementations = 12;
  total_size += 1UL * this->_internal_implementations_size();
  for (const auto& msg : this->_impl_.implementations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .substrait.FunctionSignature.Description description = 4;
  if (this->_internal_has_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.description_);
  }

  // .substrait.DerivationExpression output_type = 9;
  if (this->_internal_has_output_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.output_type_);
  }

  // bool deterministic = 7;
  if (this->_internal_deterministic() != 0) {
    total_size += 1 + 1;
  }

  // bool session_dependent = 8;
  if (this->_internal_session_dependent() != 0) {
    total_size += 1 + 1;
  }

  switch (final_variable_behavior_case()) {
    // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
    case kVariadic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.final_variable_behavior_.variadic_);
      break;
    }
    // .substrait.FunctionSignature.FinalArgNormal normal = 11;
    case kNormal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.final_variable_behavior_.normal_);
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Scalar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Scalar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Scalar::GetClassData() const { return &_class_data_; }


void FunctionSignature_Scalar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Scalar*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Scalar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Scalar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arguments_.MergeFrom(from._impl_.arguments_);
  _this->_impl_.name_.MergeFrom(from._impl_.name_);
  _this->_impl_.implementations_.MergeFrom(from._impl_.implementations_);
  if (from._internal_has_description()) {
    _this->_internal_mutable_description()->::substrait::FunctionSignature_Description::MergeFrom(
        from._internal_description());
  }
  if (from._internal_has_output_type()) {
    _this->_internal_mutable_output_type()->::substrait::DerivationExpression::MergeFrom(
        from._internal_output_type());
  }
  if (from._internal_deterministic() != 0) {
    _this->_internal_set_deterministic(from._internal_deterministic());
  }
  if (from._internal_session_dependent() != 0) {
    _this->_internal_set_session_dependent(from._internal_session_dependent());
  }
  switch (from.final_variable_behavior_case()) {
    case kVariadic: {
      _this->_internal_mutable_variadic()->::substrait::FunctionSignature_FinalArgVariadic::MergeFrom(
          from._internal_variadic());
      break;
    }
    case kNormal: {
      _this->_internal_mutable_normal()->::substrait::FunctionSignature_FinalArgNormal::MergeFrom(
          from._internal_normal());
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Scalar::CopyFrom(const FunctionSignature_Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Scalar::IsInitialized() const {
  return true;
}

void FunctionSignature_Scalar::InternalSwap(FunctionSignature_Scalar* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  _impl_.name_.InternalSwap(&other->_impl_.name_);
  _impl_.implementations_.InternalSwap(&other->_impl_.implementations_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionSignature_Scalar, _impl_.session_dependent_)
      + sizeof(FunctionSignature_Scalar::_impl_.session_dependent_)
      - PROTOBUF_FIELD_OFFSET(FunctionSignature_Scalar, _impl_.description_)>(
          reinterpret_cast<char*>(&_impl_.description_),
          reinterpret_cast<char*>(&other->_impl_.description_));
  swap(_impl_.final_variable_behavior_, other->_impl_.final_variable_behavior_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Scalar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[2]);
}

// ===================================================================

class FunctionSignature_Aggregate::_Internal {
 public:
  static const ::substrait::FunctionSignature_Description& description(const FunctionSignature_Aggregate* msg);
  static const ::substrait::DerivationExpression& output_type(const FunctionSignature_Aggregate* msg);
  static const ::substrait::FunctionSignature_FinalArgVariadic& variadic(const FunctionSignature_Aggregate* msg);
  static const ::substrait::FunctionSignature_FinalArgNormal& normal(const FunctionSignature_Aggregate* msg);
  static const ::substrait::Type& intermediate_type(const FunctionSignature_Aggregate* msg);
};

const ::substrait::FunctionSignature_Description&
FunctionSignature_Aggregate::_Internal::description(const FunctionSignature_Aggregate* msg) {
  return *msg->_impl_.description_;
}
const ::substrait::DerivationExpression&
FunctionSignature_Aggregate::_Internal::output_type(const FunctionSignature_Aggregate* msg) {
  return *msg->_impl_.output_type_;
}
const ::substrait::FunctionSignature_FinalArgVariadic&
FunctionSignature_Aggregate::_Internal::variadic(const FunctionSignature_Aggregate* msg) {
  return *msg->_impl_.final_variable_behavior_.variadic_;
}
const ::substrait::FunctionSignature_FinalArgNormal&
FunctionSignature_Aggregate::_Internal::normal(const FunctionSignature_Aggregate* msg) {
  return *msg->_impl_.final_variable_behavior_.normal_;
}
const ::substrait::Type&
FunctionSignature_Aggregate::_Internal::intermediate_type(const FunctionSignature_Aggregate* msg) {
  return *msg->_impl_.intermediate_type_;
}
void FunctionSignature_Aggregate::clear_output_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.output_type_ != nullptr) {
    delete _impl_.output_type_;
  }
  _impl_.output_type_ = nullptr;
}
void FunctionSignature_Aggregate::set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* variadic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_final_variable_behavior();
  if (variadic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(variadic);
    if (message_arena != submessage_arena) {
      variadic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variadic, submessage_arena);
    }
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = variadic;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.variadic)
}
void FunctionSignature_Aggregate::set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* normal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_final_variable_behavior();
  if (normal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(normal);
    if (message_arena != submessage_arena) {
      normal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = normal;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.normal)
}
void FunctionSignature_Aggregate::clear_intermediate_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.intermediate_type_ != nullptr) {
    delete _impl_.intermediate_type_;
  }
  _impl_.intermediate_type_ = nullptr;
}
FunctionSignature_Aggregate::FunctionSignature_Aggregate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Aggregate)
}
FunctionSignature_Aggregate::FunctionSignature_Aggregate(const FunctionSignature_Aggregate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Aggregate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){from._impl_.arguments_}
    , decltype(_impl_.implementations_){from._impl_.implementations_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.output_type_){nullptr}
    , decltype(_impl_.intermediate_type_){nullptr}
    , decltype(_impl_.max_set_){}
    , decltype(_impl_.deterministic_){}
    , decltype(_impl_.session_dependent_){}
    , decltype(_impl_.ordered_){}
    , decltype(_impl_.final_variable_behavior_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_description()) {
    _this->_impl_.description_ = new ::substrait::FunctionSignature_Description(*from._impl_.description_);
  }
  if (from._internal_has_output_type()) {
    _this->_impl_.output_type_ = new ::substrait::DerivationExpression(*from._impl_.output_type_);
  }
  if (from._internal_has_intermediate_type()) {
    _this->_impl_.intermediate_type_ = new ::substrait::Type(*from._impl_.intermediate_type_);
  }
  ::memcpy(&_impl_.max_set_, &from._impl_.max_set_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ordered_) -
    reinterpret_cast<char*>(&_impl_.max_set_)) + sizeof(_impl_.ordered_));
  clear_has_final_variable_behavior();
  switch (from.final_variable_behavior_case()) {
    case kVariadic: {
      _this->_internal_mutable_variadic()->::substrait::FunctionSignature_FinalArgVariadic::MergeFrom(
          from._internal_variadic());
      break;
    }
    case kNormal: {
      _this->_internal_mutable_normal()->::substrait::FunctionSignature_FinalArgNormal::MergeFrom(
          from._internal_normal());
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Aggregate)
}

inline void FunctionSignature_Aggregate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){arena}
    , decltype(_impl_.implementations_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.output_type_){nullptr}
    , decltype(_impl_.intermediate_type_){nullptr}
    , decltype(_impl_.max_set_){uint64_t{0u}}
    , decltype(_impl_.deterministic_){false}
    , decltype(_impl_.session_dependent_){false}
    , decltype(_impl_.ordered_){false}
    , decltype(_impl_.final_variable_behavior_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_final_variable_behavior();
}

FunctionSignature_Aggregate::~FunctionSignature_Aggregate() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Aggregate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Aggregate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arguments_.~RepeatedPtrField();
  _impl_.implementations_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.description_;
  if (this != internal_default_instance()) delete _impl_.output_type_;
  if (this != internal_default_instance()) delete _impl_.intermediate_type_;
  if (has_final_variable_behavior()) {
    clear_final_variable_behavior();
  }
}

void FunctionSignature_Aggregate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Aggregate::clear_final_variable_behavior() {
// @@protoc_insertion_point(one_of_clear_start:substrait.FunctionSignature.Aggregate)
  switch (final_variable_behavior_case()) {
    case kVariadic: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.final_variable_behavior_.variadic_;
      }
      break;
    }
    case kNormal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.final_variable_behavior_.normal_;
      }
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}


void FunctionSignature_Aggregate::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Aggregate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  _impl_.implementations_.Clear();
  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.description_ != nullptr) {
    delete _impl_.description_;
  }
  _impl_.description_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.output_type_ != nullptr) {
    delete _impl_.output_type_;
  }
  _impl_.output_type_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.intermediate_type_ != nullptr) {
    delete _impl_.intermediate_type_;
  }
  _impl_.intermediate_type_ = nullptr;
  ::memset(&_impl_.max_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ordered_) -
      reinterpret_cast<char*>(&_impl_.max_set_)) + sizeof(_impl_.ordered_));
  clear_final_variable_behavior();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Aggregate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .substrait.FunctionSignature.Argument arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arguments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Aggregate.name"));
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Description description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_description(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool deterministic = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.deterministic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool session_dependent = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.session_dependent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.DerivationExpression output_type = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_variadic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgNormal normal = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_normal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 max_set = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.max_set_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.Type intermediate_type = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_intermediate_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ordered = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.ordered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .substrait.FunctionSignature.Implementation implementations = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_implementations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Aggregate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Aggregate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arguments_size()); i < n; i++) {
    const auto& repfield = this->_internal_arguments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Aggregate.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .substrait.FunctionSignature.Description description = 4;
  if (this->_internal_has_description()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::description(this),
        _Internal::description(this).GetCachedSize(), target, stream);
  }

  // bool deterministic = 7;
  if (this->_internal_deterministic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_deterministic(), target);
  }

  // bool session_dependent = 8;
  if (this->_internal_session_dependent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_session_dependent(), target);
  }

  // .substrait.DerivationExpression output_type = 9;
  if (this->_internal_has_output_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::output_type(this),
        _Internal::output_type(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
  if (_internal_has_variadic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::variadic(this),
        _Internal::variadic(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.FinalArgNormal normal = 11;
  if (_internal_has_normal()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::normal(this),
        _Internal::normal(this).GetCachedSize(), target, stream);
  }

  // uint64 max_set = 12;
  if (this->_internal_max_set() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(12, this->_internal_max_set(), target);
  }

  // .substrait.Type intermediate_type = 13;
  if (this->_internal_has_intermediate_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::intermediate_type(this),
        _Internal::intermediate_type(this).GetCachedSize(), target, stream);
  }

  // bool ordered = 14;
  if (this->_internal_ordered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_ordered(), target);
  }

  // repeated .substrait.FunctionSignature.Implementation implementations = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_implementations_size()); i < n; i++) {
    const auto& repfield = this->_internal_implementations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Aggregate)
  return target;
}

size_t FunctionSignature_Aggregate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Aggregate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  total_size += 1UL * this->_internal_arguments_size();
  for (const auto& msg : this->_impl_.arguments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .substrait.FunctionSignature.Implementation implementations = 15;
  total_size += 1UL * this->_internal_implementations_size();
  for (const auto& msg : this->_impl_.implementations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .substrait.FunctionSignature.Description description = 4;
  if (this->_internal_has_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.description_);
  }

  // .substrait.DerivationExpression output_type = 9;
  if (this->_internal_has_output_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.output_type_);
  }

  // .substrait.Type intermediate_type = 13;
  if (this->_internal_has_intermediate_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.intermediate_type_);
  }

  // uint64 max_set = 12;
  if (this->_internal_max_set() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_max_set());
  }

  // bool deterministic = 7;
  if (this->_internal_deterministic() != 0) {
    total_size += 1 + 1;
  }

  // bool session_dependent = 8;
  if (this->_internal_session_dependent() != 0) {
    total_size += 1 + 1;
  }

  // bool ordered = 14;
  if (this->_internal_ordered() != 0) {
    total_size += 1 + 1;
  }

  switch (final_variable_behavior_case()) {
    // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
    case kVariadic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.final_variable_behavior_.variadic_);
      break;
    }
    // .substrait.FunctionSignature.FinalArgNormal normal = 11;
    case kNormal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.final_variable_behavior_.normal_);
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Aggregate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Aggregate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Aggregate::GetClassData() const { return &_class_data_; }


void FunctionSignature_Aggregate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Aggregate*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Aggregate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Aggregate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arguments_.MergeFrom(from._impl_.arguments_);
  _this->_impl_.implementations_.MergeFrom(from._impl_.implementations_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_description()) {
    _this->_internal_mutable_description()->::substrait::FunctionSignature_Description::MergeFrom(
        from._internal_description());
  }
  if (from._internal_has_output_type()) {
    _this->_internal_mutable_output_type()->::substrait::DerivationExpression::MergeFrom(
        from._internal_output_type());
  }
  if (from._internal_has_intermediate_type()) {
    _this->_internal_mutable_intermediate_type()->::substrait::Type::MergeFrom(
        from._internal_intermediate_type());
  }
  if (from._internal_max_set() != 0) {
    _this->_internal_set_max_set(from._internal_max_set());
  }
  if (from._internal_deterministic() != 0) {
    _this->_internal_set_deterministic(from._internal_deterministic());
  }
  if (from._internal_session_dependent() != 0) {
    _this->_internal_set_session_dependent(from._internal_session_dependent());
  }
  if (from._internal_ordered() != 0) {
    _this->_internal_set_ordered(from._internal_ordered());
  }
  switch (from.final_variable_behavior_case()) {
    case kVariadic: {
      _this->_internal_mutable_variadic()->::substrait::FunctionSignature_FinalArgVariadic::MergeFrom(
          from._internal_variadic());
      break;
    }
    case kNormal: {
      _this->_internal_mutable_normal()->::substrait::FunctionSignature_FinalArgNormal::MergeFrom(
          from._internal_normal());
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Aggregate::CopyFrom(const FunctionSignature_Aggregate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Aggregate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Aggregate::IsInitialized() const {
  return true;
}

void FunctionSignature_Aggregate::InternalSwap(FunctionSignature_Aggregate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  _impl_.implementations_.InternalSwap(&other->_impl_.implementations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionSignature_Aggregate, _impl_.ordered_)
      + sizeof(FunctionSignature_Aggregate::_impl_.ordered_)
      - PROTOBUF_FIELD_OFFSET(FunctionSignature_Aggregate, _impl_.description_)>(
          reinterpret_cast<char*>(&_impl_.description_),
          reinterpret_cast<char*>(&other->_impl_.description_));
  swap(_impl_.final_variable_behavior_, other->_impl_.final_variable_behavior_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Aggregate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[3]);
}

// ===================================================================

class FunctionSignature_Window::_Internal {
 public:
  static const ::substrait::FunctionSignature_Description& description(const FunctionSignature_Window* msg);
  static const ::substrait::DerivationExpression& intermediate_type(const FunctionSignature_Window* msg);
  static const ::substrait::DerivationExpression& output_type(const FunctionSignature_Window* msg);
  static const ::substrait::FunctionSignature_FinalArgVariadic& variadic(const FunctionSignature_Window* msg);
  static const ::substrait::FunctionSignature_FinalArgNormal& normal(const FunctionSignature_Window* msg);
};

const ::substrait::FunctionSignature_Description&
FunctionSignature_Window::_Internal::description(const FunctionSignature_Window* msg) {
  return *msg->_impl_.description_;
}
const ::substrait::DerivationExpression&
FunctionSignature_Window::_Internal::intermediate_type(const FunctionSignature_Window* msg) {
  return *msg->_impl_.intermediate_type_;
}
const ::substrait::DerivationExpression&
FunctionSignature_Window::_Internal::output_type(const FunctionSignature_Window* msg) {
  return *msg->_impl_.output_type_;
}
const ::substrait::FunctionSignature_FinalArgVariadic&
FunctionSignature_Window::_Internal::variadic(const FunctionSignature_Window* msg) {
  return *msg->_impl_.final_variable_behavior_.variadic_;
}
const ::substrait::FunctionSignature_FinalArgNormal&
FunctionSignature_Window::_Internal::normal(const FunctionSignature_Window* msg) {
  return *msg->_impl_.final_variable_behavior_.normal_;
}
void FunctionSignature_Window::clear_intermediate_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.intermediate_type_ != nullptr) {
    delete _impl_.intermediate_type_;
  }
  _impl_.intermediate_type_ = nullptr;
}
void FunctionSignature_Window::clear_output_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.output_type_ != nullptr) {
    delete _impl_.output_type_;
  }
  _impl_.output_type_ = nullptr;
}
void FunctionSignature_Window::set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* variadic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_final_variable_behavior();
  if (variadic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(variadic);
    if (message_arena != submessage_arena) {
      variadic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variadic, submessage_arena);
    }
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = variadic;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.variadic)
}
void FunctionSignature_Window::set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* normal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_final_variable_behavior();
  if (normal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(normal);
    if (message_arena != submessage_arena) {
      normal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = normal;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.normal)
}
FunctionSignature_Window::FunctionSignature_Window(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Window)
}
FunctionSignature_Window::FunctionSignature_Window(const FunctionSignature_Window& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Window* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){from._impl_.arguments_}
    , decltype(_impl_.name_){from._impl_.name_}
    , decltype(_impl_.implementations_){from._impl_.implementations_}
    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.intermediate_type_){nullptr}
    , decltype(_impl_.output_type_){nullptr}
    , decltype(_impl_.deterministic_){}
    , decltype(_impl_.session_dependent_){}
    , decltype(_impl_.ordered_){}
    , decltype(_impl_.window_type_){}
    , decltype(_impl_.max_set_){}
    , decltype(_impl_.final_variable_behavior_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_description()) {
    _this->_impl_.description_ = new ::substrait::FunctionSignature_Description(*from._impl_.description_);
  }
  if (from._internal_has_intermediate_type()) {
    _this->_impl_.intermediate_type_ = new ::substrait::DerivationExpression(*from._impl_.intermediate_type_);
  }
  if (from._internal_has_output_type()) {
    _this->_impl_.output_type_ = new ::substrait::DerivationExpression(*from._impl_.output_type_);
  }
  ::memcpy(&_impl_.deterministic_, &from._impl_.deterministic_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.max_set_) -
    reinterpret_cast<char*>(&_impl_.deterministic_)) + sizeof(_impl_.max_set_));
  clear_has_final_variable_behavior();
  switch (from.final_variable_behavior_case()) {
    case kVariadic: {
      _this->_internal_mutable_variadic()->::substrait::FunctionSignature_FinalArgVariadic::MergeFrom(
          from._internal_variadic());
      break;
    }
    case kNormal: {
      _this->_internal_mutable_normal()->::substrait::FunctionSignature_FinalArgNormal::MergeFrom(
          from._internal_normal());
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Window)
}

inline void FunctionSignature_Window::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){arena}
    , decltype(_impl_.name_){arena}
    , decltype(_impl_.implementations_){arena}
    , decltype(_impl_.description_){nullptr}
    , decltype(_impl_.intermediate_type_){nullptr}
    , decltype(_impl_.output_type_){nullptr}
    , decltype(_impl_.deterministic_){false}
    , decltype(_impl_.session_dependent_){false}
    , decltype(_impl_.ordered_){false}
    , decltype(_impl_.window_type_){0}
    , decltype(_impl_.max_set_){uint64_t{0u}}
    , decltype(_impl_.final_variable_behavior_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_final_variable_behavior();
}

FunctionSignature_Window::~FunctionSignature_Window() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Window)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Window::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arguments_.~RepeatedPtrField();
  _impl_.name_.~RepeatedPtrField();
  _impl_.implementations_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.description_;
  if (this != internal_default_instance()) delete _impl_.intermediate_type_;
  if (this != internal_default_instance()) delete _impl_.output_type_;
  if (has_final_variable_behavior()) {
    clear_final_variable_behavior();
  }
}

void FunctionSignature_Window::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Window::clear_final_variable_behavior() {
// @@protoc_insertion_point(one_of_clear_start:substrait.FunctionSignature.Window)
  switch (final_variable_behavior_case()) {
    case kVariadic: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.final_variable_behavior_.variadic_;
      }
      break;
    }
    case kNormal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.final_variable_behavior_.normal_;
      }
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}


void FunctionSignature_Window::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Window)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  _impl_.name_.Clear();
  _impl_.implementations_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.description_ != nullptr) {
    delete _impl_.description_;
  }
  _impl_.description_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.intermediate_type_ != nullptr) {
    delete _impl_.intermediate_type_;
  }
  _impl_.intermediate_type_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.output_type_ != nullptr) {
    delete _impl_.output_type_;
  }
  _impl_.output_type_ = nullptr;
  ::memset(&_impl_.deterministic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.max_set_) -
      reinterpret_cast<char*>(&_impl_.deterministic_)) + sizeof(_impl_.max_set_));
  clear_final_variable_behavior();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Window::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .substrait.FunctionSignature.Argument arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arguments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Window.name"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Description description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_description(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool deterministic = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.deterministic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool session_dependent = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.session_dependent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.DerivationExpression intermediate_type = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_intermediate_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.DerivationExpression output_type = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ordered = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.ordered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 max_set = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.max_set_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Window.WindowType window_type = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_window_type(static_cast<::substrait::FunctionSignature_Window_WindowType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .substrait.FunctionSignature.Implementation implementations = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_implementations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgVariadic variadic = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_variadic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.FinalArgNormal normal = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_normal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Window::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Window)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arguments_size()); i < n; i++) {
    const auto& repfield = this->_internal_arguments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string name = 3;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Window.name");
    target = stream->WriteString(3, s, target);
  }

  // .substrait.FunctionSignature.Description description = 4;
  if (this->_internal_has_description()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::description(this),
        _Internal::description(this).GetCachedSize(), target, stream);
  }

  // bool deterministic = 7;
  if (this->_internal_deterministic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_deterministic(), target);
  }

  // bool session_dependent = 8;
  if (this->_internal_session_dependent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_session_dependent(), target);
  }

  // .substrait.DerivationExpression intermediate_type = 9;
  if (this->_internal_has_intermediate_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::intermediate_type(this),
        _Internal::intermediate_type(this).GetCachedSize(), target, stream);
  }

  // .substrait.DerivationExpression output_type = 10;
  if (this->_internal_has_output_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::output_type(this),
        _Internal::output_type(this).GetCachedSize(), target, stream);
  }

  // bool ordered = 11;
  if (this->_internal_ordered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_ordered(), target);
  }

  // uint64 max_set = 12;
  if (this->_internal_max_set() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(12, this->_internal_max_set(), target);
  }

  // .substrait.FunctionSignature.Window.WindowType window_type = 14;
  if (this->_internal_window_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      14, this->_internal_window_type(), target);
  }

  // repeated .substrait.FunctionSignature.Implementation implementations = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_implementations_size()); i < n; i++) {
    const auto& repfield = this->_internal_implementations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.FinalArgVariadic variadic = 16;
  if (_internal_has_variadic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::variadic(this),
        _Internal::variadic(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.FinalArgNormal normal = 17;
  if (_internal_has_normal()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::normal(this),
        _Internal::normal(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Window)
  return target;
}

size_t FunctionSignature_Window::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Window)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  total_size += 1UL * this->_internal_arguments_size();
  for (const auto& msg : this->_impl_.arguments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string name = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.name_.size());
  for (int i = 0, n = _impl_.name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.name_.Get(i));
  }

  // repeated .substrait.FunctionSignature.Implementation implementations = 15;
  total_size += 1UL * this->_internal_implementations_size();
  for (const auto& msg : this->_impl_.implementations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .substrait.FunctionSignature.Description description = 4;
  if (this->_internal_has_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.description_);
  }

  // .substrait.DerivationExpression intermediate_type = 9;
  if (this->_internal_has_intermediate_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.intermediate_type_);
  }

  // .substrait.DerivationExpression output_type = 10;
  if (this->_internal_has_output_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.output_type_);
  }

  // bool deterministic = 7;
  if (this->_internal_deterministic() != 0) {
    total_size += 1 + 1;
  }

  // bool session_dependent = 8;
  if (this->_internal_session_dependent() != 0) {
    total_size += 1 + 1;
  }

  // bool ordered = 11;
  if (this->_internal_ordered() != 0) {
    total_size += 1 + 1;
  }

  // .substrait.FunctionSignature.Window.WindowType window_type = 14;
  if (this->_internal_window_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_window_type());
  }

  // uint64 max_set = 12;
  if (this->_internal_max_set() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_max_set());
  }

  switch (final_variable_behavior_case()) {
    // .substrait.FunctionSignature.FinalArgVariadic variadic = 16;
    case kVariadic: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.final_variable_behavior_.variadic_);
      break;
    }
    // .substrait.FunctionSignature.FinalArgNormal normal = 17;
    case kNormal: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.final_variable_behavior_.normal_);
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Window::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Window::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Window::GetClassData() const { return &_class_data_; }


void FunctionSignature_Window::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Window*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Window&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Window)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arguments_.MergeFrom(from._impl_.arguments_);
  _this->_impl_.name_.MergeFrom(from._impl_.name_);
  _this->_impl_.implementations_.MergeFrom(from._impl_.implementations_);
  if (from._internal_has_description()) {
    _this->_internal_mutable_description()->::substrait::FunctionSignature_Description::MergeFrom(
        from._internal_description());
  }
  if (from._internal_has_intermediate_type()) {
    _this->_internal_mutable_intermediate_type()->::substrait::DerivationExpression::MergeFrom(
        from._internal_intermediate_type());
  }
  if (from._internal_has_output_type()) {
    _this->_internal_mutable_output_type()->::substrait::DerivationExpression::MergeFrom(
        from._internal_output_type());
  }
  if (from._internal_deterministic() != 0) {
    _this->_internal_set_deterministic(from._internal_deterministic());
  }
  if (from._internal_session_dependent() != 0) {
    _this->_internal_set_session_dependent(from._internal_session_dependent());
  }
  if (from._internal_ordered() != 0) {
    _this->_internal_set_ordered(from._internal_ordered());
  }
  if (from._internal_window_type() != 0) {
    _this->_internal_set_window_type(from._internal_window_type());
  }
  if (from._internal_max_set() != 0) {
    _this->_internal_set_max_set(from._internal_max_set());
  }
  switch (from.final_variable_behavior_case()) {
    case kVariadic: {
      _this->_internal_mutable_variadic()->::substrait::FunctionSignature_FinalArgVariadic::MergeFrom(
          from._internal_variadic());
      break;
    }
    case kNormal: {
      _this->_internal_mutable_normal()->::substrait::FunctionSignature_FinalArgNormal::MergeFrom(
          from._internal_normal());
      break;
    }
    case FINAL_VARIABLE_BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Window::CopyFrom(const FunctionSignature_Window& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Window::IsInitialized() const {
  return true;
}

void FunctionSignature_Window::InternalSwap(FunctionSignature_Window* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  _impl_.name_.InternalSwap(&other->_impl_.name_);
  _impl_.implementations_.InternalSwap(&other->_impl_.implementations_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionSignature_Window, _impl_.max_set_)
      + sizeof(FunctionSignature_Window::_impl_.max_set_)
      - PROTOBUF_FIELD_OFFSET(FunctionSignature_Window, _impl_.description_)>(
          reinterpret_cast<char*>(&_impl_.description_),
          reinterpret_cast<char*>(&other->_impl_.description_));
  swap(_impl_.final_variable_behavior_, other->_impl_.final_variable_behavior_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Window::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[4]);
}

// ===================================================================

class FunctionSignature_Description::_Internal {
 public:
};

FunctionSignature_Description::FunctionSignature_Description(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Description)
}
FunctionSignature_Description::FunctionSignature_Description(const FunctionSignature_Description& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Description* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.language_){}
    , decltype(_impl_.body_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language().empty()) {
    _this->_impl_.language_.Set(from._internal_language(), 
      _this->GetArenaForAllocation());
  }
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.body_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body().empty()) {
    _this->_impl_.body_.Set(from._internal_body(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Description)
}

inline void FunctionSignature_Description::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.language_){}
    , decltype(_impl_.body_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.body_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FunctionSignature_Description::~FunctionSignature_Description() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Description)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Description::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.language_.Destroy();
  _impl_.body_.Destroy();
}

void FunctionSignature_Description::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Description::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Description)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.language_.ClearToEmpty();
  _impl_.body_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Description::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string language = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_language();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Description.language"));
        } else
          goto handle_unusual;
        continue;
      // string body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_body();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Description.body"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Description::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Description)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string language = 1;
  if (!this->_internal_language().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language().data(), static_cast<int>(this->_internal_language().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Description.language");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_language(), target);
  }

  // string body = 2;
  if (!this->_internal_body().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_body().data(), static_cast<int>(this->_internal_body().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Description.body");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_body(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Description)
  return target;
}

size_t FunctionSignature_Description::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Description)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string language = 1;
  if (!this->_internal_language().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language());
  }

  // string body = 2;
  if (!this->_internal_body().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_body());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Description::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Description::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Description::GetClassData() const { return &_class_data_; }


void FunctionSignature_Description::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Description*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Description&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Description)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_language().empty()) {
    _this->_internal_set_language(from._internal_language());
  }
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Description::CopyFrom(const FunctionSignature_Description& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Description::IsInitialized() const {
  return true;
}

void FunctionSignature_Description::InternalSwap(FunctionSignature_Description* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.language_, lhs_arena,
      &other->_impl_.language_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.body_, lhs_arena,
      &other->_impl_.body_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Description::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[5]);
}

// ===================================================================

class FunctionSignature_Implementation::_Internal {
 public:
};

FunctionSignature_Implementation::FunctionSignature_Implementation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Implementation)
}
FunctionSignature_Implementation::FunctionSignature_Implementation(const FunctionSignature_Implementation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Implementation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Implementation)
}

inline void FunctionSignature_Implementation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FunctionSignature_Implementation::~FunctionSignature_Implementation() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Implementation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Implementation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
}

void FunctionSignature_Implementation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Implementation::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Implementation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Implementation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .substrait.FunctionSignature.Implementation.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::substrait::FunctionSignature_Implementation_Type>(val));
        } else
          goto handle_unusual;
        continue;
      // string uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Implementation.uri"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Implementation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Implementation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.FunctionSignature.Implementation.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string uri = 2;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Implementation.uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Implementation)
  return target;
}

size_t FunctionSignature_Implementation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Implementation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 2;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // .substrait.FunctionSignature.Implementation.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Implementation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Implementation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Implementation::GetClassData() const { return &_class_data_; }


void FunctionSignature_Implementation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Implementation*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Implementation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Implementation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Implementation::CopyFrom(const FunctionSignature_Implementation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Implementation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Implementation::IsInitialized() const {
  return true;
}

void FunctionSignature_Implementation::InternalSwap(FunctionSignature_Implementation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Implementation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[6]);
}

// ===================================================================

class FunctionSignature_Argument_ValueArgument::_Internal {
 public:
  static const ::substrait::ParameterizedType& type(const FunctionSignature_Argument_ValueArgument* msg);
};

const ::substrait::ParameterizedType&
FunctionSignature_Argument_ValueArgument::_Internal::type(const FunctionSignature_Argument_ValueArgument* msg) {
  return *msg->_impl_.type_;
}
void FunctionSignature_Argument_ValueArgument::clear_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.type_ != nullptr) {
    delete _impl_.type_;
  }
  _impl_.type_ = nullptr;
}
FunctionSignature_Argument_ValueArgument::FunctionSignature_Argument_ValueArgument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Argument.ValueArgument)
}
FunctionSignature_Argument_ValueArgument::FunctionSignature_Argument_ValueArgument(const FunctionSignature_Argument_ValueArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Argument_ValueArgument* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){nullptr}
    , decltype(_impl_.constant_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_type()) {
    _this->_impl_.type_ = new ::substrait::ParameterizedType(*from._impl_.type_);
  }
  _this->_impl_.constant_ = from._impl_.constant_;
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Argument.ValueArgument)
}

inline void FunctionSignature_Argument_ValueArgument::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){nullptr}
    , decltype(_impl_.constant_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FunctionSignature_Argument_ValueArgument::~FunctionSignature_Argument_ValueArgument() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Argument.ValueArgument)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Argument_ValueArgument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.type_;
}

void FunctionSignature_Argument_ValueArgument::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Argument_ValueArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Argument.ValueArgument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.type_ != nullptr) {
    delete _impl_.type_;
  }
  _impl_.type_ = nullptr;
  _impl_.constant_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Argument_ValueArgument::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .substrait.ParameterizedType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool constant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.constant_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Argument_ValueArgument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Argument.ValueArgument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.ParameterizedType type = 1;
  if (this->_internal_has_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::type(this),
        _Internal::type(this).GetCachedSize(), target, stream);
  }

  // bool constant = 2;
  if (this->_internal_constant() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_constant(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Argument.ValueArgument)
  return target;
}

size_t FunctionSignature_Argument_ValueArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Argument.ValueArgument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .substrait.ParameterizedType type = 1;
  if (this->_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.type_);
  }

  // bool constant = 2;
  if (this->_internal_constant() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Argument_ValueArgument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Argument_ValueArgument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Argument_ValueArgument::GetClassData() const { return &_class_data_; }


void FunctionSignature_Argument_ValueArgument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Argument_ValueArgument*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Argument_ValueArgument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Argument.ValueArgument)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type()) {
    _this->_internal_mutable_type()->::substrait::ParameterizedType::MergeFrom(
        from._internal_type());
  }
  if (from._internal_constant() != 0) {
    _this->_internal_set_constant(from._internal_constant());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Argument_ValueArgument::CopyFrom(const FunctionSignature_Argument_ValueArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Argument.ValueArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Argument_ValueArgument::IsInitialized() const {
  return true;
}

void FunctionSignature_Argument_ValueArgument::InternalSwap(FunctionSignature_Argument_ValueArgument* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionSignature_Argument_ValueArgument, _impl_.constant_)
      + sizeof(FunctionSignature_Argument_ValueArgument::_impl_.constant_)
      - PROTOBUF_FIELD_OFFSET(FunctionSignature_Argument_ValueArgument, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Argument_ValueArgument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[7]);
}

// ===================================================================

class FunctionSignature_Argument_TypeArgument::_Internal {
 public:
  static const ::substrait::ParameterizedType& type(const FunctionSignature_Argument_TypeArgument* msg);
};

const ::substrait::ParameterizedType&
FunctionSignature_Argument_TypeArgument::_Internal::type(const FunctionSignature_Argument_TypeArgument* msg) {
  return *msg->_impl_.type_;
}
void FunctionSignature_Argument_TypeArgument::clear_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.type_ != nullptr) {
    delete _impl_.type_;
  }
  _impl_.type_ = nullptr;
}
FunctionSignature_Argument_TypeArgument::FunctionSignature_Argument_TypeArgument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Argument.TypeArgument)
}
FunctionSignature_Argument_TypeArgument::FunctionSignature_Argument_TypeArgument(const FunctionSignature_Argument_TypeArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Argument_TypeArgument* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_type()) {
    _this->_impl_.type_ = new ::substrait::ParameterizedType(*from._impl_.type_);
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Argument.TypeArgument)
}

inline void FunctionSignature_Argument_TypeArgument::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FunctionSignature_Argument_TypeArgument::~FunctionSignature_Argument_TypeArgument() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Argument.TypeArgument)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Argument_TypeArgument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.type_;
}

void FunctionSignature_Argument_TypeArgument::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Argument_TypeArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Argument.TypeArgument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.type_ != nullptr) {
    delete _impl_.type_;
  }
  _impl_.type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Argument_TypeArgument::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .substrait.ParameterizedType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Argument_TypeArgument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Argument.TypeArgument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.ParameterizedType type = 1;
  if (this->_internal_has_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::type(this),
        _Internal::type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Argument.TypeArgument)
  return target;
}

size_t FunctionSignature_Argument_TypeArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Argument.TypeArgument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .substrait.ParameterizedType type = 1;
  if (this->_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Argument_TypeArgument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Argument_TypeArgument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Argument_TypeArgument::GetClassData() const { return &_class_data_; }


void FunctionSignature_Argument_TypeArgument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Argument_TypeArgument*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Argument_TypeArgument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Argument.TypeArgument)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type()) {
    _this->_internal_mutable_type()->::substrait::ParameterizedType::MergeFrom(
        from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Argument_TypeArgument::CopyFrom(const FunctionSignature_Argument_TypeArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Argument.TypeArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Argument_TypeArgument::IsInitialized() const {
  return true;
}

void FunctionSignature_Argument_TypeArgument::InternalSwap(FunctionSignature_Argument_TypeArgument* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Argument_TypeArgument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[8]);
}

// ===================================================================

class FunctionSignature_Argument_EnumArgument::_Internal {
 public:
};

FunctionSignature_Argument_EnumArgument::FunctionSignature_Argument_EnumArgument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Argument.EnumArgument)
}
FunctionSignature_Argument_EnumArgument::FunctionSignature_Argument_EnumArgument(const FunctionSignature_Argument_EnumArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Argument_EnumArgument* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){from._impl_.options_}
    , decltype(_impl_.optional_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.optional_ = from._impl_.optional_;
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Argument.EnumArgument)
}

inline void FunctionSignature_Argument_EnumArgument::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){arena}
    , decltype(_impl_.optional_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FunctionSignature_Argument_EnumArgument::~FunctionSignature_Argument_EnumArgument() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Argument.EnumArgument)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Argument_EnumArgument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.options_.~RepeatedPtrField();
}

void FunctionSignature_Argument_EnumArgument::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Argument_EnumArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Argument.EnumArgument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _impl_.optional_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Argument_EnumArgument::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_options();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Argument.EnumArgument.options"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool optional = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.optional_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Argument_EnumArgument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Argument.EnumArgument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string options = 1;
  for (int i = 0, n = this->_internal_options_size(); i < n; i++) {
    const auto& s = this->_internal_options(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Argument.EnumArgument.options");
    target = stream->WriteString(1, s, target);
  }

  // bool optional = 2;
  if (this->_internal_optional() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_optional(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Argument.EnumArgument)
  return target;
}

size_t FunctionSignature_Argument_EnumArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Argument.EnumArgument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string options = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.options_.size());
  for (int i = 0, n = _impl_.options_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.options_.Get(i));
  }

  // bool optional = 2;
  if (this->_internal_optional() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Argument_EnumArgument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Argument_EnumArgument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Argument_EnumArgument::GetClassData() const { return &_class_data_; }


void FunctionSignature_Argument_EnumArgument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Argument_EnumArgument*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Argument_EnumArgument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Argument.EnumArgument)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.options_.MergeFrom(from._impl_.options_);
  if (from._internal_optional() != 0) {
    _this->_internal_set_optional(from._internal_optional());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Argument_EnumArgument::CopyFrom(const FunctionSignature_Argument_EnumArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Argument.EnumArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Argument_EnumArgument::IsInitialized() const {
  return true;
}

void FunctionSignature_Argument_EnumArgument::InternalSwap(FunctionSignature_Argument_EnumArgument* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  swap(_impl_.optional_, other->_impl_.optional_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Argument_EnumArgument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[9]);
}

// ===================================================================

class FunctionSignature_Argument::_Internal {
 public:
  static const ::substrait::FunctionSignature_Argument_ValueArgument& value(const FunctionSignature_Argument* msg);
  static const ::substrait::FunctionSignature_Argument_TypeArgument& type(const FunctionSignature_Argument* msg);
  static const ::substrait::FunctionSignature_Argument_EnumArgument& enum_(const FunctionSignature_Argument* msg);
};

const ::substrait::FunctionSignature_Argument_ValueArgument&
FunctionSignature_Argument::_Internal::value(const FunctionSignature_Argument* msg) {
  return *msg->_impl_.argument_kind_.value_;
}
const ::substrait::FunctionSignature_Argument_TypeArgument&
FunctionSignature_Argument::_Internal::type(const FunctionSignature_Argument* msg) {
  return *msg->_impl_.argument_kind_.type_;
}
const ::substrait::FunctionSignature_Argument_EnumArgument&
FunctionSignature_Argument::_Internal::enum_(const FunctionSignature_Argument* msg) {
  return *msg->_impl_.argument_kind_.enum__;
}
void FunctionSignature_Argument::set_allocated_value(::substrait::FunctionSignature_Argument_ValueArgument* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_argument_kind();
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    set_has_value();
    _impl_.argument_kind_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.value)
}
void FunctionSignature_Argument::set_allocated_type(::substrait::FunctionSignature_Argument_TypeArgument* type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_argument_kind();
  if (type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(type);
    if (message_arena != submessage_arena) {
      type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    set_has_type();
    _impl_.argument_kind_.type_ = type;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.type)
}
void FunctionSignature_Argument::set_allocated_enum_(::substrait::FunctionSignature_Argument_EnumArgument* enum_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_argument_kind();
  if (enum_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(enum_);
    if (message_arena != submessage_arena) {
      enum_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, enum_, submessage_arena);
    }
    set_has_enum_();
    _impl_.argument_kind_.enum__ = enum_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.enum)
}
FunctionSignature_Argument::FunctionSignature_Argument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature.Argument)
}
FunctionSignature_Argument::FunctionSignature_Argument(const FunctionSignature_Argument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSignature_Argument* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.argument_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  clear_has_argument_kind();
  switch (from.argument_kind_case()) {
    case kValue: {
      _this->_internal_mutable_value()->::substrait::FunctionSignature_Argument_ValueArgument::MergeFrom(
          from._internal_value());
      break;
    }
    case kType: {
      _this->_internal_mutable_type()->::substrait::FunctionSignature_Argument_TypeArgument::MergeFrom(
          from._internal_type());
      break;
    }
    case kEnum: {
      _this->_internal_mutable_enum_()->::substrait::FunctionSignature_Argument_EnumArgument::MergeFrom(
          from._internal_enum_());
      break;
    }
    case ARGUMENT_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature.Argument)
}

inline void FunctionSignature_Argument::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.argument_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_argument_kind();
}

FunctionSignature_Argument::~FunctionSignature_Argument() {
  // @@protoc_insertion_point(destructor:substrait.FunctionSignature.Argument)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSignature_Argument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (has_argument_kind()) {
    clear_argument_kind();
  }
}

void FunctionSignature_Argument::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSignature_Argument::clear_argument_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.FunctionSignature.Argument)
  switch (argument_kind_case()) {
    case kValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.argument_kind_.value_;
      }
      break;
    }
    case kType: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.argument_kind_.type_;
      }
      break;
    }
    case kEnum: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.argument_kind_.enum__;
      }
      break;
    }
    case ARGUMENT_KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ARGUMENT_KIND_NOT_SET;
}


void FunctionSignature_Argument::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionSignature.Argument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  clear_argument_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSignature_Argument::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "substrait.FunctionSignature.Argument.name"));
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Argument.ValueArgument value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Argument.TypeArgument type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .substrait.FunctionSignature.Argument.EnumArgument enum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_enum_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSignature_Argument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionSignature.Argument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionSignature.Argument.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .substrait.FunctionSignature.Argument.ValueArgument value = 2;
  if (_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.Argument.TypeArgument type = 3;
  if (_internal_has_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::type(this),
        _Internal::type(this).GetCachedSize(), target, stream);
  }

  // .substrait.FunctionSignature.Argument.EnumArgument enum = 4;
  if (_internal_has_enum_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::enum_(this),
        _Internal::enum_(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionSignature.Argument)
  return target;
}

size_t FunctionSignature_Argument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionSignature.Argument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  switch (argument_kind_case()) {
    // .substrait.FunctionSignature.Argument.ValueArgument value = 2;
    case kValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.argument_kind_.value_);
      break;
    }
    // .substrait.FunctionSignature.Argument.TypeArgument type = 3;
    case kType: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.argument_kind_.type_);
      break;
    }
    // .substrait.FunctionSignature.Argument.EnumArgument enum = 4;
    case kEnum: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.argument_kind_.enum__);
      break;
    }
    case ARGUMENT_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature_Argument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSignature_Argument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature_Argument::GetClassData() const { return &_class_data_; }


void FunctionSignature_Argument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSignature_Argument*>(&to_msg);
  auto& from = static_cast<const FunctionSignature_Argument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionSignature.Argument)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  switch (from.argument_kind_case()) {
    case kValue: {
      _this->_internal_mutable_value()->::substrait::FunctionSignature_Argument_ValueArgument::MergeFrom(
          from._internal_value());
      break;
    }
    case kType: {
      _this->_internal_mutable_type()->::substrait::FunctionSignature_Argument_TypeArgument::MergeFrom(
          from._internal_type());
      break;
    }
    case kEnum: {
      _this->_internal_mutable_enum_()->::substrait::FunctionSignature_Argument_EnumArgument::MergeFrom(
          from._internal_enum_());
      break;
    }
    case ARGUMENT_KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSignature_Argument::CopyFrom(const FunctionSignature_Argument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionSignature.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSignature_Argument::IsInitialized() const {
  return true;
}

void FunctionSignature_Argument::InternalSwap(FunctionSignature_Argument* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.argument_kind_, other->_impl_.argument_kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature_Argument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[10]);
}

// ===================================================================

class FunctionSignature::_Internal {
 public:
};

FunctionSignature::FunctionSignature(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:substrait.FunctionSignature)
}
FunctionSignature::FunctionSignature(const FunctionSignature& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  FunctionSignature* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionSignature)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSignature::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSignature::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata FunctionSignature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_substrait_2ffunction_2eproto_getter, &descriptor_table_substrait_2ffunction_2eproto_once,
      file_level_metadata_substrait_2ffunction_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace substrait
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_FinalArgVariadic*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgVariadic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_FinalArgVariadic >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_FinalArgNormal*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgNormal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_FinalArgNormal >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Scalar*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Scalar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Scalar >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Aggregate*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Aggregate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Aggregate >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Window*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Window >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Window >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Description*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Description >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Description >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Implementation*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Implementation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Implementation >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Argument_ValueArgument*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Argument_ValueArgument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Argument_ValueArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Argument_TypeArgument*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Argument_TypeArgument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Argument_TypeArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Argument_EnumArgument*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Argument_EnumArgument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Argument_EnumArgument >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature_Argument*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature_Argument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature_Argument >(arena);
}
template<> PROTOBUF_NOINLINE ::substrait::FunctionSignature*
Arena::CreateMaybeMessage< ::substrait::FunctionSignature >(Arena* arena) {
  return Arena::CreateMessageInternal< ::substrait::FunctionSignature >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
